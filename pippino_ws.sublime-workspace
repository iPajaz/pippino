{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"compre",
				"CompressedImage"
			],
			[
				"local",
				"local_parameters"
			],
			[
				"calbac",
				"ReentrantCallbackGroup"
			],
			[
				"Follo",
				"FollowPathRPP"
			],
			[
				"profi",
				"d455_fast_profile"
			],
			[
				"hir",
				"d455_hires_profile"
			],
			[
				"laun",
				"launch_arguments"
			],
			[
				"pip",
				"pippino_actuators_cli"
			],
			[
				"reque",
				"request_type"
			],
			[
				"setd",
				"set_d455_color_camera_on"
			],
			[
				"MQ",
				"MQTT_AUTH"
			],
			[
				"pi",
				"pippino_commander"
			],
			[
				"pipp",
				"pippino_commander_node"
			],
			[
				"tcli",
				"t265_param_cli"
			],
			[
				"t",
				"t265_req_future"
			],
			[
				"ROS",
				"ROS_DISTRO"
			],
			[
				"pico",
				"PippinoCommander"
			],
			[
				"ROSD",
				"ROS_DISTRO"
			],
			[
				"vido",
				"video_stream_controller"
			],
			[
				"un",
				"undistorted_image"
			],
			[
				"compreimag",
				"CompressedImage"
			],
			[
				"aruco",
				"aruco_detection_node"
			],
			[
				"charsta",
				"charging_station"
			],
			[
				"ya",
				"yaw_to_position"
			],
			[
				"charposiro",
				"CHARGING_POSITION_REACHED"
			],
			[
				"charpo",
				"CHARGING_POSITION_REACHED"
			],
			[
				"T2",
				"T265_link"
			],
			[
				"msg",
				"aruco_marker_visible_msg"
			],
			[
				"yat",
				"yaw_to_location"
			],
			[
				"chaposre",
				"charging_position_reached"
			],
			[
				"final",
				"final_yaw_correction"
			],
			[
				"chargin_",
				"charging_position_rough_reached"
			],
			[
				"cm",
				"camera_link"
			],
			[
				"delt",
				"delta_x"
			],
			[
				"eul",
				"euler2quat"
			],
			[
				"conne",
				"connect_to_dock"
			],
			[
				"l",
				"L4T_VERSION"
			],
			[
				"BASE",
				"BASE_IMAGE"
			],
			[
				"Ba",
				"BASE_IMAGE"
			],
			[
				"robodesc",
				"robot_desc"
			],
			[
				"tpi",
				"topic"
			],
			[
				"i",
				"distro"
			],
			[
				"camede",
				"camera_depth_optical_frame"
			],
			[
				"pkggazebo",
				"pkg_dolly_gazebo"
			],
			[
				"lau",
				"launch"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"INST",
				"Package Control: Install Package"
			],
			[
				"DOCKER",
				"Set Syntax: Dockerfile"
			],
			[
				"wra",
				"Word Wrap: Toggle"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"docker",
				"Set Syntax: Dockerfile"
			],
			[
				"bash",
				"Set Syntax: Bash"
			],
			[
				"dock",
				"Set Syntax: Dockerfile"
			],
			[
				"wr",
				"Word Wrap: Toggle"
			],
			[
				"xm",
				"Set Syntax: XML"
			],
			[
				"pyt",
				"Set Syntax: Python"
			],
			[
				"yam",
				"Set Syntax: YAML"
			],
			[
				"py",
				"Set Syntax: Python"
			],
			[
				"SYNTPY",
				"Set Syntax: Python"
			],
			[
				"SYNDOCK",
				"Set Syntax: Dockerfile"
			],
			[
				"pytho",
				"Set Syntax: Python"
			],
			[
				"veri",
				"Set Syntax: Verilog"
			],
			[
				"bas",
				"Set Syntax: Bash"
			],
			[
				"syntpy",
				"Set Syntax: Python"
			],
			[
				"makef",
				"Set Syntax: Makefile"
			],
			[
				"yaml",
				"Set Syntax: YAML"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"xml",
				"Set Syntax: XML"
			],
			[
				"syntax makef",
				"Set Syntax: Makefile"
			],
			[
				"syntxm",
				"Set Syntax: XML"
			],
			[
				"wor",
				"Word Wrap: Toggle"
			],
			[
				"syntmake",
				"Set Syntax: Makefile"
			],
			[
				"theme",
				"UI: Select Theme"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/michele/remote/pippino2/pippino_ws/src",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_service_msg",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_service_msg/msg",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_service_msg/src"
	],
	"file_history":
	[
		"/home/michele/remote/pippino2/pippino_ws/src/.vscode/settings.json",
		"/home/michele/remote/pippino2/pippino_ws/src/.vscode/c_cpp_properties.json",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_ws_remote.code-workspace",
		"/home/michele/pippino_ws/src/video_stream_controller_cpp_condemned/src/video_stream_controller.cpp",
		"/home/michele/pippino_ws/src/video_stream_controller_cpp_condemned/package.xml",
		"/home/michele/pippino_ws/src/video_stream_controller_cpp_condemned/CMakeLists.txt",
		"/home/michele/pippino_ws/src/pippino_service_msg/package.xml",
		"/home/michele/pippino_ws/src/pippino_service_msg/CMakeLists.txt",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_up_detection/pippino_up_detection/mqtt_settings.py",
		"/home/michele/remote/pippino2/pippino_ws/src/.gitignore",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_service_msg/CMakeLists.txt",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_service_msg/package.xml",
		"/home/michele/remote/pippino2/pippino_ws/src/video_stream_controller/package.xml",
		"/home/michele/remote/pippino2/pippino_ws/src/video_stream_controller/video_stream_controller/video_stream_controller.py",
		"/home/michele/remote/pippino2/pippino_ws/src/video_stream_controller_cpp/CMakeLists.txt",
		"/home/michele/remote/pippino2/pippino_ws/src/video_stream_controller_cpp/package.xml",
		"/home/michele/remote/pippino2/pippino_ws/src/video_stream_controller_cpp/src/video_stream_controller.cpp",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_up_detection/pippino_up_detection/pippino_up_detection.py",
		"/home/michele/remote/pippino2/pippino_ws/src/bashrc_pippino.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/source_ros.sh",
		"/home/michele/pippino_ws/src/pippino_bringup/launch/bringup.launch.py",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino-realsense-d455-entrypoint.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_up_detection/package.xml",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_up_detection/CMakeLists.txt",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_navigation/launch/bringup_launch.py",
		"/home/michele/.bashrc",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_bringup/launch/pippino.launch.py",
		"/home/michele/stop_pippino.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/docker_image_setup/run_daemon_realsense_t265.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/docker_image_setup/run_daemon_realsense_d455.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_navigation/config/nav2_params_humble.yaml",
		"/home/michele/remote/pippino2/autodock_ws/src/pippino-autodock.code-workspace",
		"/home/michele/remote/pippino2/pippino_ws/src/docker_image_setup/stop_daemons.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino-realsense-t265-entrypoint.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/docker_image_setup/run_interactive_realsense_t265.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/docker_image_setup/run_interactive_realsense_d455.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_navigation/launch/navigation.launch.py",
		"/home/michele/remote/pippino2/pippino_ws/src/docker_image_setup/ubu_humble/Dockerfile_ubu_realsense",
		"/home/michele/remote/pippino2/pippino_ws/src/docker_image_setup/ubu_humble/build_ubu_services.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/docker_image_setup/ubu_humble/build_ubu_realsense_d455.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/docker_image_setup/ubu_humble/build_ubu_realsense.sh",
		"/home/michele/Downloads/dockeruser/Dockerfile",
		"/home/michele/remote/pippino2/pippino_ws/src/aruco_detection/launch/aruco_detection.launch.py",
		"/home/michele/remote/pippino2/pippino_ws/src/d455.yaml",
		"/home/michele/remote/pippino2/pippino_ws/src/aruco_detection/aruco_detection/aruco_tf_publisher.py",
		"/home/michele/maps/upper_floor_with_aruco/aruco_markers.yaml",
		"/home/michele/remote/pippino2/pippino_ws/src/fastrtps_client.xml",
		"/home/michele/remote/pippino2/pippino_ws/src/start_rosbridge.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/fastrtps_server.xml",
		"/home/michele/pippino_ws/src/fastrtps_client.xml",
		"/home/michele/ros_introspection.sh",
		"/home/michele/pippino_ws/src/fastrtps_server.xml",
		"/home/michele/pippino_ws/src/fastrtps_v1.xml",
		"/home/michele/remote/pippino2/pippino_ws/src/fastrtps_v1.xml",
		"/home/michele/remote/pippino2/pippino_ws/src/docker_image_setup/run_daemon_services.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/docker_image_setup/run_interactive_services.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/docker_image_setup/stop_daemon_services.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/test_rtps_entrypoint.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino-inference-entrypoint.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino-realsense-entrypoint.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino-services-entrypoint.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino-services-entrypoint_interactive.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_navigation/config/bt_navigate_to_pose.xml",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_bringup/launch/rs_d455_launch.py",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino-realsense_d455-entrypoint.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino-realsense_t265-entrypoint.sh",
		"/home/michele/navigation_humble_ws/setup_and_build.sh",
		"/home/michele/pippino_ws/src/pippino_navigation/launch/navigation_launch.py",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_navigation/CMakeLists.txt",
		"/home/michele/navigation_humble_ws/src/navigation2/nav2_bringup/launch/navigation_launch.py",
		"/home/michele/pippino_ws/src/pippino_navigation/launch/bringup_launch.py",
		"/media/michele/home1/michele/ubuntu_configure_script.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_bringup/launch/rs_t265_launch.py",
		"/home/michele/remote/pippino2/pippino_ws/src/aruco_detection/setup.py",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_description/launch/description.launch.py",
		"/home/michele/remote/pippino2/pippino_ws/src/docker_image_setup/ubu_humble/Dockerfile_ubu_base",
		"/home/michele/remote/pippino2/pippino_ws/src/docker_image_setup/ubu_humble/Dockerfile_ubu_services",
		"/home/michele/remote/pippino2/pippino_ws/src/video_stream_controller_cpp/launch/video_stream_controller.launch.py",
		"/home/michele/remote/pippino2/.bashrc",
		"/home/michele/ubuntu_configure_script.sh",
		"/home/michele/start_pippino_environment.sh",
		"/home/michele/fastdds_server.sh",
		"/home/michele/start_pippino.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_odom/src/pippino_odom.cpp",
		"/home/michele/pippino_ws/src/pippino_navigation/config/nav2_params_humble.yaml",
		"/home/michele/pippino_ws/src/pippino_navigation/config/slam_params_try.yaml",
		"/home/michele/pippino_ws/src/pippino_navigation/config/slam_params.yaml",
		"/home/michele/pippino_ws/src/pippino_navigation/launch/obsolete/bringup2.launch.py",
		"/home/michele/pippino_ws/src/pippino_navigation/launch/nav_bringup_launch.py",
		"/home/michele/remote/pippino2/pippino_ws/src/docker_image_setup/run_daemons.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/docker_image_setup/run_interactive_realsense.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/docker_image_setup/test_rtps_sv.sh",
		"/home/michele/pippino_ws/src/pippino_navigation/launch/bringup2.launch.py",
		"/home/michele/pippino_ws/src/pippino_navigation/launch/bringup.launch.py",
		"/home/michele/pippino_ws/src/pippino_navigation/launch/navigation.launch.py",
		"/home/michele/remote/pippino2/pippino_ws/src/docker_image_setup/run_daemon_realsense_separate.sh",
		"/home/michele/remote/pippino2/pippino_ws/src/docker_image_setup/run_daemon_realsense.sh",
		"/home/michele/pippino_ws/src/pippino_description/launch/description.launch.py",
		"/home/michele/remote/pippino2/pippino_ws/src/d455_extrinsics.txt",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_bringup/launch/rs_launch.py",
		"/home/michele/remote/pippino2/pippino_ws/src/pippino_bringup/launch/rs_multi_camera_launch.py",
		"/home/michele/remote/pippino2/pippino_ws/src/docker_image_setup/test_rtps_rs.sh",
		"/home/michele/remote/pippino/pippino_ws/src/docker_image_setup/ubu_humble/Dockerfile_ubu_realsense",
		"/home/michele/pippino_ws/src/pippino_ws.sublime-project",
		"/home/michele/remote/pippino/pippino_ws/src/docker_image_setup/ubu_humble/build_ubu_realsense.sh",
		"/home/michele/remote/pippino/pippino_ws/src/docker_image_setup/ubu_humble/Dockerfile_ubu_base",
		"/home/michele/remote/pippino/pippino_ws/src/docker_image_setup/ubu_humble/build_ubu_base.sh",
		"/home/michele/remote/pippino/pippino_ws/src/video_stream_controller/video_stream_controller/video_stream_controller.py",
		"/home/michele/pippino_ws/src/pippino_navigation/config/bt_navigate_through_poses_w_replanning_and_recovery.xml",
		"/media/michele/home/michele/.bash_history",
		"/home/michele/.bash_history",
		"/home/michele/pippino_ws/src/pippino_navigation/config/bt_navigate_to_pose.xml",
		"/home/michele/Downloads/chengdu_retest_in_cmk_new_commit_only_non_sram_fails.csv",
		"/home/michele/pippino_ws/src/pippino_navigation/config/default_params.yaml",
		"/home/michele/remote/pippino/pippino_ws/src/pippino_bringup/launch/rs_launch.py",
		"/home/michele/remote/pippino/pippino_ws/src/d455.yaml",
		"/home/michele/remote/pippino/pippino_ws/src/pippino_bringup/launch/rs_multi_camera_launch.py",
		"/home/michele/pippino_ws/src/pippino_navigation/config/nav2_params_galactic.yaml",
		"/home/michele/remote/pippino/pippino_ws/src/docker_image_setup/run_daemons.sh",
		"/home/michele/remote/pippino/pippino_ws/src/pippino_odom/launch/odom.launch.py",
		"/home/michele/remote/pippino/pippino_ws/src/pippino_odom/src/pippino_odom.cpp",
		"/home/michele/remote/pippino/pippino_ws/src/pippino_description/config/ekf.yaml",
		"/home/michele/pippino_ws/src/pippino_description/src/description/pippino.urdf",
		"/home/michele/remote/pippino/pippino_ws/src/pippino_bringup/launch/pippino.launch.py",
		"/home/michele/remote/pippino/pippino_ws/src/pippino_description/src/description/pippino.urdf",
		"/home/michele/remote/pippino/pippino_ws/src/pippino_description/launch/description.launch.py",
		"/media/michele/6321f30b-b360-44c7-8c65-ea3014d29763/home/michele/ubuntu_configure_script.sh",
		"/home/michele/remote/pippino/pippino_ws/src/pippino_bringup/launch/rs_d400_and_t265_launch.py"
	],
	"find":
	{
		"height": 50.0
	},
	"find_in_files":
	{
		"height": 631.0,
		"where_history":
		[
			"",
			"/home/michele/pippino_ws/src",
			"/home/michele/remote/pippino/pippino_ws/src",
			"",
			"/home/michele/remote/pippino/pippino_ws/src,<project filters>",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"pippino_service_msg",
			"paho",
			"start_explorer_wanderer_server",
			"d455_docker_process",
			"h_voxel_map: True",
			"tilting_cloud",
			"VoxelLayer",
			"start_navigation",
			"aruco_detection_launch",
			"clearing",
			"get_package_share_directory",
			"',\n",
			"declare_autostart_cmd",
			"start_navigation",
			"navigation",
			"realsense_launch_pkg_prefix",
			"231029",
			"aruco_detection_launch",
			"20",
			"rosbridge_server_node",
			"web_video_server_node",
			"start_explorer_wanderer_server",
			"appuser",
			"$GID",
			"pluto",
			"/root",
			"breakpo",
			"VERSION",
			"Rotation in 3 dimensions.\\n\\n    This class provides an interface to initialize from and represent rotations\\n    with:\\n\\n    - Quaternions\\n    - Direction Cosine Matrices\\n    - Rotation Vectors\\n    - Euler angles\\n\\n    The following operations on rotations are supported:\\n\\n    - Application on vectors\\n    - Rotation Composition\\n    - Rotation Inversion\\n    - Rotation Indexing\\n\\n    Indexing within a rotation is supported since multiple rotation transforms\\n    can be stored within a single `Rotation` instance.\\n\\n    To create `Rotation` objects use ``from_...`` methods (see examples below).\\n    ``Rotation(...)`` is not supposed to be instantiated directly.\\n\\n    Methods\\n    -------\\n    __len__\\n    from_quat\\n    from_dcm\\n    from_rotvec\\n    from_euler\\n    as_quat\\n    as_dcm\\n    as_rotvec\\n    as_euler\\n    apply\\n    __mul__\\n    inv\\n    __getitem__\\n    random\\n    match_vectors\\n\\n    See Also\\n    --------\\n    Slerp\\n\\n    Notes\\n    -----\\n    .. versionadded: 1.2.0\\n\\n    Examples\\n    --------\\n    >>> from scipy.spatial.transform import Rotation as R\\n\\n    A `Rotation` instance can be initialized in any of the above formats and\\n    converted to any of the others. The underlying object is independent of the\\n    representation used for initialization.\\n\\n    Consider a counter-clockwise rotation of 90 degrees about the z-axis. This\\n    corresponds to the following quaternion (in scalar-last format):\\n\\n    >>> r = R.from_quat([0, 0, np.sin(np.pi/4), np.cos(np.pi/4)])\\n\\n    The rotation can be expressed in any of the other formats:\\n\\n    >>> r.as_dcm()\\n    array([[ 2.22044605e-16, -1.00000000e+00,  0.00000000e+00],\\n    [ 1.00000000e+00,  2.22044605e-16,  0.00000000e+00],\\n    [ 0.00000000e+00,  0.00000000e+00,  1.00000000e+00]])\\n    >>> r.as_rotvec()\\n    array([0.        , 0.        , 1.57079633])\\n    >>> r.as_euler('zyx', degrees=True)\\n    array([90.,  0.,  0.])\\n\\n    The same rotation can be initialized using a direction cosine matrix:\\n\\n    >>> r = R.from_dcm(np.array([\\n    ... [0, -1, 0],\\n    ... [1, 0, 0],\\n    ... [0, 0, 1]]))\\n\\n    Representation in other formats:\\n\\n    >>> r.as_quat()\\n    array([0.        , 0.        , 0.70710678, 0.70710678])\\n    >>> r.as_rotvec()\\n    array([0.        , 0.        , 1.57079633])\\n    >>> r.as_euler('zyx', degrees=True)\\n    array([90.,  0.,  0.])\\n\\n    The rotation vector corresponding to this rotation is given by:\\n\\n    >>> r = R.from_rotvec(np.pi/2 * np.array([0, 0, 1]))\\n\\n    Representation in other formats:\\n\\n    >>> r.as_quat()\\n    array([0.        , 0.        , 0.70710678, 0.70710678])\\n    >>> r.as_dcm()\\n    array([[ 2.22044605e-16, -1.00000000e+00,  0.00000000e+00],\\n           [ 1.00000000e+00,  2.22044605e-16,  0.00000000e+00],\\n           [ 0.00000000e+00,  0.00000000e+00,  1.00000000e+00]])\\n    >>> r.as_euler('zyx', degrees=True)\\n    array([90.,  0.,  0.])\\n\\n    The ``from_euler`` method is quite flexible in the range of input formats\\n    it supports. Here we initialize a single rotation about a single axis:\\n\\n    >>> r = R.from_euler('z', 90, degrees=True)\\n\\n    Again, the object is representation independent and can be converted to any\\n    other format:\\n\\n    >>> r.as_quat()\\n    array([0.        , 0.        , 0.70710678, 0.70710678])\\n    >>> r.as_dcm()\\n    array([[ 2.22044605e-16, -1.00000000e+00,  0.00000000e+00],\\n           [ 1.00000000e+00,  2.22044605e-16,  0.00000000e+00],\\n           [ 0.00000000e+00,  0.00000000e+00,  1.00000000e+00]])\\n    >>> r.as_rotvec()\\n    array([0.        , 0.        , 1.57079633])\\n\\n    It is also possible to initialize multiple rotations in a single instance\\n    using any of the `from_...` functions. Here we initialize a stack of 3\\n    rotations using the ``from_euler`` method:\\n\\n    >>> r = R.from_euler('zyx', [\\n    ... [90, 0, 0],\\n    ... [0, 45, 0],\\n    ... [45, 60, 30]], degrees=True)\\n\\n    The other representations also now return a stack of 3 rotations. For\\n    example:\\n\\n    >>> r.as_quat()\\n    array([[0.        , 0.        , 0.70710678, 0.70710678],\\n           [0.        , 0.38268343, 0.        , 0.92387953],\\n           [0.39190384, 0.36042341, 0.43967974, 0.72331741]])\\n\\n    Applying the above rotations onto a vector:\\n\\n    >>> v = [1, 2, 3]\\n    >>> r.apply(v)\\n    array([[-2.        ,  1.        ,  3.        ],\\n           [ 2.82842712,  2.        ,  1.41421356],\\n           [ 2.24452282,  0.78093109,  2.89002836]])\\n\\n    A `Rotation` instance can be indexed and sliced as if it were a single\\n    1D array or list:\\n\\n    >>> r.as_quat()\\n    array([[0.        , 0.        , 0.70710678, 0.70710678],\\n           [0.        , 0.38268343, 0.        , 0.92387953],\\n           [0.39190384, 0.36042341, 0.43967974, 0.72331741]])\\n    >>> p = r[0]\\n    >>> p.as_dcm()\\n    array([[ 2.22044605e-16, -1.00000000e+00,  0.00000000e+00],\\n           [ 1.00000000e+00,  2.22044605e-16,  0.00000000e+00],\\n           [ 0.00000000e+00,  0.00000000e+00,  1.00000000e+00]])\\n    >>> q = r[1:3]\\n    >>> q.as_quat()\\n    array([[0.        , 0.38268343, 0.        , 0.92387953],\\n           [0.39190384, 0.36042341, 0.43967974, 0.72331741]])\\n\\n    Multiple rotations can be composed using the ``*`` operator:\\n\\n    >>> r1 = R.from_euler('z', 90, degrees=True)\\n    >>> r2 = R.from_rotvec([np.pi/4, 0, 0])\\n    >>> v = [1, 2, 3]\\n    >>> r2.apply(r1.apply(v))\\n    array([-2.        , -1.41421356,  2.82842712])\\n    >>> r3 = r2 * r1 # Note the order\\n    >>> r3.apply(v)\\n    array([-2.        , -1.41421356,  ",
			"', '",
			"{",
			"R",
			"rotati",
			"camera_calibration_parameters_filename",
			"mtx",
			"camera_listener_callback",
			"camera_list",
			"aruco_marker_side_lengths_str",
			"t265_param_cli",
			"color_image_callback",
			"color_image_topic",
			"color_image_callback",
			"got color",
			"rosbridge_server_node",
			"\n    rosbridge",
			"start_lidar_process",
			" ",
			"26",
			"32",
			"rosbridge_server_node",
			"pippino-realsense-entrypoint.sh",
			"pippino_ws",
			"source /pippino_ws/install/local_setup.bash",
			"                ",
			"pippino_nav_dir",
			"bringup_dir",
			"nav_bringup_dir",
			"aruco_detection_launch",
			"_ba",
			"src",
			"true",
			"video_stream_controller_node",
			"pippino_odom_pkg_prefix",
			"pippino_odom_launch",
			"mtx",
			"ndis",
			"os",
			"LaunchConfiguration",
			"Command",
			"aruco_detection_node",
			"boost",
			"usr/lib",
			"vcs import src < ros2.rosinstall",
			"odom_msg_",
			"odometry_pub_",
			"publish",
			"false",
			"ROS_ROOT",
			"image_transpo",
			"image_transpor",
			"fisheye_image_callback",
			"String",
			"PippinoVideoStream",
			"PippinoActuators",
			"PippinoVideoStream",
			"SetParameters",
			"Parameter",
			"Int32",
			"CameraInfo",
			"Joy",
			"CompressedImage",
			"update_odometry",
			"wheel_radps_left_cb",
			"radps_left_sub_",
			"radps_left",
			"radps_left_sub_",
			"resol",
			"start_navigation_with_slam",
			"params",
			"nav_bringup_dir",
			"slam_params_file",
			"use_composition",
			"slam_params_file_file",
			"slam_params_file",
			"slam_params",
			"slam_params_file",
			"fubar_file",
			"slam_params",
			"slam_params_file",
			"declare_slam_params_file_cmd",
			"configured_params",
			"declare_slam_params_file_cmd",
			"slam_params_file",
			"true",
			"false",
			"true",
			"false",
			"true",
			"pippino_nav_dir",
			"nav2_launch_dir",
			"nav2_bringup_dir",
			"declare_slam_params_file_cmd",
			"slam_params_file",
			"nav2_bringup_dir",
			"slam_params_file",
			"pippino_nav_launch_dir",
			"slam_params_file",
			"declare_slam_params_file_cmd"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"pippino_interfaces",
			"foxy"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 36.0
	},
	"input":
	{
		"height": 213.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 301.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "pippino_ws.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"odom.c",
				"src/pippino_odom/src/pippino_odom.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 600.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 456.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 475.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
