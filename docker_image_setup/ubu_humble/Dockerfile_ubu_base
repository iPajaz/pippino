ARG BASE_IMAGE=unknown/unknown
FROM $BASE_IMAGE

ARG ROS_DISTRO
RUN echo "The selected ROS distro is: $ROS_DISTRO"
RUN test -n "$ROS_DISTRO"

ARG DEBIAN_FRONTEND=noninteractive
ARG ROS_ROOT=/opt/ros/${ROS_DISTRO}

#
# change the locale from POSIX to UTF-8
#
RUN apt-get update && apt-get upgrade -y\
    && apt-get install -y --no-install-recommends \
    locales \
    curl \
    wget \
    nano \
    gnupg2 \
    lsb-release \
    ca-certificates \
    software-properties-common \
    apt-transport-https \
    gnupg

RUN locale-gen en_US en_US.UTF-8 && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV PYTHONIOENCODING=utf-8

#
# add the ROS deb repo to the apt sources list
#

RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

#
# install development packages
#
RUN apt-get update
RUN apt-get install -y --no-install-recommends \
        build-essential \
        cmake \
        git \
        libbullet-dev \
        libpython3-dev \
        python3-colcon-common-extensions \
        python3-pip \
        python3-pytest-cov \
        python3-rosdep \
        python3-setuptools \
        python3-vcstool \
        python3-flake8-docstrings \
        python3-rosinstall-generator \
        libasio-dev \
        libtinyxml2-dev \
        libcunit1-dev \
        ros-dev-tools \
        unzip
RUN apt install -y python-dev-is-python2
RUN apt install -y python-dev-is-python3

# install some pip packages needed for testing
RUN python3 -m pip install -U \
        argcomplete \
        numpy \
        flake8-blind-except \
        flake8-builtins \
        flake8-class-newline \
        flake8-comprehensions \
        flake8-deprecated \
        flake8-import-order \
        flake8-quotes \
        "pytest>=5.3" \
        pytest-repeat \
        pytest-rerunfailures

ARG OPEN_CV_VERSION=4.5.0

#
# overwrite with cuda opencv
#

# WORKDIR /tmp
# COPY assets/OpenCV-${OPEN_CV_VERSION}-aarch64-ubuntu20.zip .
# RUN unzip OpenCV-${OPEN_CV_VERSION}-aarch64-ubuntu20.zip && \
#     apt update && \
#     apt install -y --no-install-recommends -f ./*.deb && \
#     rm -rf /var/lib/apt/lists/* && \
#     rm -rf * \
#     apt-get clean

#install missing numpy
RUN pip3 install numpy

#
# upgrade cmake - https://stackoverflow.com/a/56690743
# this is needed to build some of the ROS2 packages
#
#RUN cmake --version
#RUN wget -qO - https://apt.kitware.com/keys/kitware-archive-latest.asc | apt-key add -
#RUN apt-add-repository "deb https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main"
#RUN apt-get install -y --no-install-recommends --only-upgrade cmake

RUN pip install cmake --upgrade

RUN cmake --version

#
# download/build ROS from source
#
RUN mkdir -p $ROS_ROOT

WORKDIR $ROS_ROOT

# https://answers.ros.org/question/325245/minimal-ros2-installation/?answer=325249#post-id-325249
RUN rosinstall_generator --deps --rosdistro ${ROS_DISTRO} ros_base \
        launch_xml \
        launch_yaml \
        launch_testing \
        launch_testing_ament_cmake \
        demo_nodes_cpp \
        demo_nodes_py \
        example_interfaces \
        camera_calibration_parsers \
        camera_info_manager \
        cv_bridge \
        v4l2_camera \
        vision_opencv \
        vision_msgs \
        image_geometry \
        image_pipeline \
        image_transport \
        compressed_image_transport \
        compressed_depth_image_transport \
        image_transport_plugins \
        > ros2.${ROS_DISTRO}.ros_base.rosinstall

RUN rm -rf src && mkdir -p src && cat ros2.${ROS_DISTRO}.ros_base.rosinstall && \
    vcs import src < ros2.${ROS_DISTRO}.ros_base.rosinstall

RUN apt update

# install dependencies using rosdep
RUN rosdep init
RUN rosdep update && \
    rosdep install -y \
      --ignore-src \
      --from-paths src \
      --rosdistro ${ROS_DISTRO} \
      --skip-keys "libopencv-dev libopencv-contrib-dev libopencv-imgproc-dev python-opencv python3-opencv"

    # build it!
RUN colcon build \
    --packages-up-to ament_pycodestyle ament_cppcheck ament_lint ament_package fastcdr gtest_vendor ament_cmake_core ament_flake8 gmock_vendor ament_cmake_export_definitions ament_cmake_export_include_directories ament_cmake_export_libraries ament_cmake_export_link_flags ament_cmake_include_directories ament_cmake_libraries ament_cmake_python ament_cmake_version ament_pep257 ament_cmake_export_dependencies ament_cmake_export_interfaces ament_cmake_export_targets ament_cmake_target_dependencies ament_cmake_test ament_copyright ament_cmake_gtest ament_cmake_pytest ament_cpplint ament_index_python ament_lint_auto ament_lint_cmake ament_xmllint domain_coordinator ament_cmake_gen_version_h ament_cmake_gmock ament_cmake_lint_cmake rosidl_cli rpyutils ament_cmake ament_cmake_copyright ament_cmake_cppcheck ament_cmake_cpplint ament_cmake_flake8 ament_cmake_pep257 ament_cmake_xmllint uncrustify_vendor ament_uncrustify ament_cmake_uncrustify ament_lint_common ament_cmake_ros fastrtps_cmake_module python_cmake_module rosidl_adapter rosidl_typesupport_interface rosidl_parser rcutils rosidl_cmake rcpputils rosidl_runtime_c rmw rosidl_generator_c rosidl_runtime_cpp rosidl_typesupport_introspection_c rosidl_generator_cpp rosidl_typesupport_introspection_cpp rosidl_typesupport_fastrtps_cpp rosidl_typesupport_fastrtps_c rosidl_typesupport_c rosidl_generator_py rosidl_typesupport_cpp rosidl_default_runtime builtin_interfaces std_msgs geometry_msgs sensor_msgs \
    --merge-install \
    --cmake-args -DCMAKE_BUILD_TYPE=Release

    # build it!
RUN colcon build \
    --packages-up-to rti_connext_dds_cmake_module foonathan_memory_vendor tracetools rmw_implementation_cmake spdlog_vendor performance_test_fixture console_bridge_vendor ament_index_cpp mimick_vendor launch_testing_ament_cmake rcutils rosidl_runtime_c rcpputils rosidl_runtime_cpp rmw rosidl_generator_c rosidl_generator_cpp rosidl_typesupport_introspection_c rosidl_typesupport_fastrtps_cpp rosidl_typesupport_fastrtps_c rosidl_typesupport_c rosidl_typesupport_introspection_cpp rosidl_generator_py rosidl_typesupport_cpp rosidl_default_runtime libyaml_vendor rcl_logging_interface rcl_logging_spdlog iceoryx_posh rcl_yaml_param_parser rosidl_default_generators builtin_interfaces orocos_kdl_vendor iceoryx_binding_c unique_identifier_msgs rmw_dds_common rmw_connextdds_common std_msgs rmw_connextdds cyclonedds action_msgs rosgraph_msgs rcl_interfaces geometry_msgs rmw_cyclonedds_cpp sensor_msgs statistics_msgs lifecycle_msgs composition_interfaces  \
    --merge-install \
    --cmake-args -DCMAKE_BUILD_TYPE=Release

RUN colcon build \
    --merge-install \
    --packages-skip-build-finished \
    --packages-up-to cv_bridge image_geometry \
    --cmake-args -DCMAKE_BUILD_TYPE=Release -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda -DPython3_EXECUTABLE=/usr/bin/python3.8

RUN colcon build \
    --packages-skip-build-finished \
    --packages-up-to rclpy rclcpp tinyxml2_vendor class_loader tf2 tf2_msgs ament_cmake_auto pluginlib yaml_cpp_vendor tracetools_image_pipeline stereo_msgs std_srvs pybind11_vendor test_msgs vision_opencv vision_msgs example_interfaces fastrtps rmw_fastrtps_shared_cpp rmw_fastrtps_dynamic_cpp rmw_fastrtps_cpp rmw_implementation rcl rcl_lifecycle libstatistics_collector rcl_action \
    --merge-install \
    --cmake-args -DCMAKE_BUILD_TYPE=Release -DPython3_EXECUTABLE=/usr/bin/python3.8

RUN colcon build \
    --packages-skip-build-finished \
    --packages-up-to actionlib_msgs camera_calibration_parsers camera_info_manager common_interfaces demo_nodes_cpp diagnostic_msgs geometry2 image_transport kdl_parser keyboard_handler message_filters nav_msgs rclcpp_action rclcpp_components rclcpp_lifecycle robot_state_publisher ros2cli_common_extensions ros2cli_test_interfaces ros2lifecycle_test_fixtures ros_core ros_environment ros_testing rosbag2_compression rosbag2_compression_zstd rosbag2_cpp rosbag2_interfaces rosbag2_storage rosbag2_storage_default_plugins rosbag2_test_common shape_msgs shared_queues_vendor sqlite3_vendor sros2_cmake stereo_image_proc tf2_bullet tf2_eigen tf2_eigen_kdl tf2_geometry_msgs tf2_kdl tf2_py tf2_ros tf2_sensor_msgs tinyxml_vendor trajectory_msgs urdf urdf_parser_plugin urdfdom urdfdom_headers visualization_msgs zstd_vendor \
    --merge-install \
    --cmake-args -DCMAKE_BUILD_TYPE=Release -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda -DPython3_EXECUTABLE=/usr/bin/python3.8

RUN colcon build \
    --packages-skip-build-finished \
    --packages-up-to rosbag2_transport \
    --merge-install \
    --cmake-args -DCMAKE_BUILD_TYPE=Release -DPython3_EXECUTABLE=/usr/bin/python3.8

RUN colcon build \
    --merge-install \
    --packages-skip-build-finished \
    --cmake-args -DCMAKE_BUILD_TYPE=Release -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda -DPython3_EXECUTABLE=/usr/bin/python3.8

# source ROS
RUN echo "export ROS_DISTRO=${ROS_DISTRO}" >> /root/.bashrc
RUN echo "source /opt/ros/${ROS_DISTRO}/install/setup.bash" >> /root/.bashrc

CMD ["bash"]
WORKDIR /root
